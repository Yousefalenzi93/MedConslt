/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: false, // Disable to avoid double rendering issues
  swcMinify: true,
  output: 'export',
  trailingSlash: true,
  skipTrailingSlashRedirect: true,
  distDir: 'out',
  images: {
    unoptimized: true
  },
  eslint: {
    ignoreDuringBuilds: true,
  },
  typescript: {
    ignoreBuildErrors: true,
  },
  // Completely disable static generation to avoid event handler serialization
  experimental: {
    appDir: true,
    webpackBuildWorker: false,
    esmExternals: false,
    serverComponentsExternalPackages: [],
  },
  // Force all pages to be dynamic
  generateBuildId: async () => {
    return 'medical-platform-' + Date.now()
  },
  // Webpack configuration
  webpack: (config, { isServer, dev }) => {
    // Disable optimization that causes issues with event handlers
    config.optimization = {
      ...config.optimization,
      minimize: false, // Disable minification to avoid serialization issues
    };

    if (!isServer) {
      config.resolve.fallback = {
        ...config.resolve.fallback,
        fs: false,
        net: false,
        tls: false,
        crypto: false,
        stream: false,
        url: false,
        zlib: false,
        http: false,
        https: false,
        assert: false,
        os: false,
        path: false,
      };
    }

    return config;
  }
};

module.exports = nextConfig;
